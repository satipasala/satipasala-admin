{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "cli": {
    "analytics": "73534053-b99f-44c5-bbbf-522e1ce85750"
  },
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "admin": {
      "root": "apps/admin/",
      "sourceRoot": "apps/admin/src",
      "projectType": "application",
      "prefix": "admin",
      "schematics": {
        "@nrwl/schematics:component": {
          "style": "scss"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/admin",
            "index": "apps/admin/src/index.html",
            "main": "apps/admin/src/main.ts",
            "polyfills": "apps/admin/src/polyfills.ts",
            "tsConfig": "apps/admin/tsconfig.app.json",
            "assets": [
              "apps/admin/src/favicon.ico",
              "apps/admin/src/assets",
              "apps/admin/src/manifest.json"
            ],
            "styles": ["apps/admin/src/styles.scss"],
            "scripts": [],
            "serviceWorker": true
          },
          "configurations": {
            "develop": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.develop.ts"
                }
              ],
              "optimization": false,
              "outputHashing": "all",
              "sourceMap": true,
              "namedChunks": false,
              "aot": false,
              "extractLicenses": false,
              "vendorChunk": false,
              "buildOptimizer": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json"
            },
            "develop-admin-en": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.develop.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/en/",
              "baseHref": "/en/"
            },
            "develop-admin-si": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.develop.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/si/",
              "baseHref": "/si/"
            },
            "develop-admin-ta": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.develop.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/ta/",
              "baseHref": "/ta/"
            },
            "uat": {
              "fileReplacements": [
                {
                  "replace": "apps/web/src/environments/environment.ts",
                  "with": "apps/web/src/environments/environment.uat.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/web/ngsw-config.json"
            },
            "uat-admin-en": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.uat.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/en/",
              "baseHref": "/en/"
            },
            "uat-admin-si": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.uat.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/si/",
              "baseHref": "/si/"
            },
            "uat-admin-ta": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.uat.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/ta/",
              "baseHref": "/ta/"
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/web/src/environments/environment.ts",
                  "with": "apps/web/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/web/ngsw-config.json"
            },
            "staging-admin-en": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/en/",
              "baseHref": "/en/"
            },
            "staging-admin-si": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/si/",
              "baseHref": "/si/"
            },
            "staging-admin-ta": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/ta/",
              "baseHref": "/ta/"
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/web/src/environments/environment.ts",
                  "with": "apps/web/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json"
            },
            "production-admin-en": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/en/",
              "baseHref": "/en/"
            },
            "production-admin-si": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/si/",
              "baseHref": "/si/"
            },
            "production-admin-ta": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/ta/",
              "baseHref": "/ta/"
            },
            "satipasala-admin": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.satipasala.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json"
            },
            "satipasala-admin-en": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.satipasala.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/en/",
              "baseHref": "/en/"
            },
            "satipasala-admin-si": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.satipasala.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/si/",
              "baseHref": "/si/"
            },
            "satipasala-admin-ta": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.satipasala.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/admin/ngsw-config.json",
              "outputPath": "dist/apps/admin/ta/",
              "baseHref": "/ta/"
            }
          },
          "defaultConfiguration": "develop",
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "admin:build",
            "port": 4001
          },
          "configurations": {
            "develop": {
              "browserTarget": "admin:build:develop"
            },
            "uat": {
              "browserTarget": "admin:build:uat"
            },
            "production-en": {
              "browserTarget": "admin:build:production-en"
            },
            "production-si": {
              "browserTarget": "admin:build:production-si"
            },
            "production-ta": {
              "browserTarget": "admin:build:production-ta"
            },
            "develop-admin-en": {
              "browserTarget": "admin:build:develop-admin-en",
              "port": 4005
            },
            "develop-admin-si": {
              "browserTarget": "admin:build:develop-admin-si",
              "port": 4006
            },
            "develop-admin-ta": {
              "browserTarget": "admin:build:develop-admin-ta",
              "port": 4007
            },
            "satipasala-admin": {
              "browserTarget": "admin:build:satipasala-admin"
            },
            "satipasala-admin-en": {
              "browserTarget": "admin:build:satipasala-admin-en"
            },
            "satipasala-admin-si": {
              "browserTarget": "admin:build:satipasala-admin-si"
            },
            "satipasala-admin-ta": {
              "browserTarget": "admin:build:satipasala-admin-ta"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "admin:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/admin/tsconfig.app.json",
              "apps/admin/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/admin/jest.config.js",
            "tsConfig": "apps/admin/tsconfig.spec.json",
            "setupFile": "apps/admin/src/test-setup.ts"
          },
          "outputs": ["coverage/apps/admin/"]
        },
        "app-shell": {
          "builder": "@angular-devkit/build-angular:app-shell",
          "options": {
            "browserTarget": "admin:build",
            "serverTarget": "admin:server",
            "route": "shell"
          },
          "configurations": {
            "production": {
              "browserTarget": "admin:build:production",
              "serverTarget": "admin:server:production"
            }
          }
        }
      }
    },
    "admin-e2e": {
      "root": "apps/admin-e2e",
      "projectType": "application",
      "prefix": "",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/admin-e2e/cypress.json",
            "tsConfig": "apps/admin-e2e/tsconfig.e2e.json",
            "devServerTarget": "admin:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "admin:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": "apps/admin-e2e/tsconfig.e2e.json",
            "exclude": ["**/node_modules/**"]
          }
        }
      }
    },
    "base": {
      "root": "libs/base",
      "sourceRoot": "libs/base/src",
      "projectType": "library",
      "prefix": "s",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/base/tsconfig.lib.json",
              "libs/base/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/base/jest.config.js",
            "tsConfig": "libs/base/tsconfig.spec.json"
          },
          "outputs": ["coverage/libs/base"]
        }
      },
      "schematics": {
        "@nrwl/schematics:component": {
          "styleext": "scss"
        }
      }
    },
    "core": {
      "root": "libs/core",
      "sourceRoot": "libs/core/src",
      "projectType": "library",
      "prefix": "s",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/core/tsconfig.lib.json",
              "libs/core/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/core/jest.config.js",
            "tsConfig": "libs/core/tsconfig.spec.json"
          },
          "outputs": ["coverage/libs/core"]
        }
      },
      "schematics": {
        "@nrwl/schematics:component": {
          "styleext": "scss"
        }
      }
    },
    "google-charts": {
      "root": "libs/google-charts",
      "sourceRoot": "libs/google-charts/src",
      "projectType": "library",
      "prefix": "satipasala",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/google-charts/tsconfig.lib.json",
              "libs/google-charts/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/google-charts/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/google-charts/jest.config.js",
            "tsConfig": "libs/google-charts/tsconfig.spec.json",
            "setupFile": "libs/google-charts/src/test-setup.ts"
          },
          "outputs": ["coverage/libs/google-charts"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    },
    "testing": {
      "root": "libs/testing",
      "sourceRoot": "libs/testing/src",
      "projectType": "library",
      "prefix": "satipasala",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/testing/tsconfig.lib.json",
              "libs/testing/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/testing/jest.config.js",
            "tsConfig": "libs/testing/tsconfig.spec.json"
          },
          "outputs": ["coverage/libs/testing"]
        }
      },
      "schematics": {
        "@nrwl/schematics:component": {
          "styleext": "scss"
        }
      }
    }
  }
}
