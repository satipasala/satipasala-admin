{
  "name": "satipasala",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ngcc": "ngcc",
    "postinstall": "ngcc --properties es2015 browser module main",
    "ng": "ng",
    "nx": "nx",
    "start": "ng serve",
    "start-admin-en": "ng serve admin --configuration=develop-admin-en",
    "start-admin-si": "ng serve admin --configuration=develop-admin-si",
    "start-admin-ta": "ng serve admin --configuration=develop-admin-ta",
    "build": "npm install  && cd functions && npm install  && npm run build && cd .. && ng build admin --configuration=develop-admin-en",
    "build-develop": "npm install  && cd functions && npm install  && npm run build && cd .. && ng build admin --configuration=develop-admin-en && ng build admin --configuration=develop-admin-si && ng build admin --configuration=develop-admin-ta ",
    "build-uat": "npm install  && cd functions && npm install && npm run build && cd .. && ng build admin --configuration=uat-admin-en && ng build admin --configuration=uat-admin-si && ng build admin --configuration=uat-admin-ta",
    "build-staging": "npm install  && cd functions && npm install && npm run build && cd .. && ng build admin --configuration=staging-admin-en && ng build admin --configuration=staging-admin-si && ng build admin --configuration=staging-admin-ta",
    "build-prod": "npm install  && cd functions && npm install && npm run build && cd .. && ng build admin --configuration=production-admin-en && ng build admin --configuration=production-admin-si && ng build admin --configuration=production-admin-ta",
    "build-satipasala": "npm install  && cd functions && npm install && npm run build && cd .. && ng build admin --configuration=satipasala-admin-en && ng build admin --configuration=satipasala-admin-si && ng build admin --configuration=satipasala-admin-ta",
    "test": "ng test --watch=false --code-coverage --passWithNoTests",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "update:check": "ng update",
    "dep-graph": "nx dep-graph",
    "sonar-scanner": "node_modules/sonar-scanner/bin/sonar-scanner",
    "help": "nx help",
    "compodoc:g": "compodoc -p ./apps/admin/tsconfig.json -d documentation/admin",
    "compodoc:s:admin": "compodoc -p ./apps/admin/tsconfig.json -d documentation/admin --serve",
    "compodoc:w:admin": "compodoc -p ./apps/admin/tsconfig.json -d documentation/admin --serve --watch",
    "predeploy-satipasala": "firebase use --token $FIREBASE_SATIPASALA_TOKEN $CI_ENVIRONMENT_SLUG",
    "predeploy": "firebase use --token $FIREBASE_TOKEN $CI_ENVIRONMENT_SLUG",
    "export:indexes": "firebase firestore:indexes",
    "deploy:indexes": "firebase deploy --only firestore:indexes",
    "deploy:hosting": "firebase deploy --only hosting",
    "deploy:functions": "firebase deploy --only functions",
    "deploy:database": "firebase deploy --only firestore",
    "deploy:storage": "firebase deploy --only storage",
    "deploy:rules": "firebase deploy --only firestore:rules",
    "deploy": "firebase functions:config:set email.login_link=$LOGIN_LINK && firebase deploy --non-interactive --token $FIREBASE_TOKEN --force",
    "deploy-satipasala": "firebase functions:config:set email.login_link=$LOGIN_LINK && firebase deploy --non-interactive --token $FIREBASE_SATIPASALA_TOKEN --force",
    "bundle-report-admin": "ng build admin --configuration production --stats-json && webpack-bundle-analyzer dist/apps/admin/stats.json",
    "seed-data": "node seed_data/json-to-firestore.js",
    "export-database": "node seed_data/export-database.js",
    "extract-admin": "ng xi18n admin --output-path src/assets/i18n",
    "extract-client": "ng xi18n client --output-path src/assets/i18n",
    "clean": "npx rimraf -- hooks node_modules package-lock.json && npm i",
    "workspace-generator": "nx workspace-generator"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "13.3.8",
    "@angular/cdk": "^13.3.7",
    "@angular/common": "13.3.8",
    "@angular/compiler": "13.3.8",
    "@angular/core": "13.3.8",
    "@angular/fire": "^7.3.0",
    "@angular/forms": "13.3.8",
    "@angular/localize": "^13.3.8",
    "@angular/material": "^13.3.7",
    "@angular/platform-browser": "^13.3.8",
    "@angular/platform-browser-dynamic": "^13.3.8",
    "@angular/platform-server": "^13.3.8",
    "@angular/pwa": "^13.3.5",
    "@angular/router": "^13.3.8",
    "@angular/service-worker": "^13.3.8",
    "@fortawesome/angular-fontawesome": "^0.10.2",
    "@fortawesome/fontawesome-svg-core": "^6.1.1",
    "@fortawesome/free-solid-svg-icons": "^6.1.1",
    "@google-cloud/functions-framework": "^3.1.1",
    "@google-cloud/translate": "^6.3.1",
    "@ng-bootstrap/ng-bootstrap": "^12.1.1",
    "@nrwl/angular": "^14.1.5",
    "animate.css": "^4.1.1",
    "bootstrap": "^5.1.3",
    "core-js": "^3.22.5",
    "crypto-js": "^4.1.1",
    "firebase": "^9.8.1",
    "font-awesome": "^4.7.0",
    "lodash": "^4.17.21",
    "material-icons": "^0.3.1",
    "ng2-file-upload": "^1.4.0",
    "ngx-owl-carousel-o": "^6.0.0",
    "rxjs": "^7.5.5",
    "save": "^2.5.0",
    "tns-core-modules": "^6.5.27",
    "tslib": "^2.4.0",
    "uuid": "^8.3.2",
    "zone.js": "^0.11.5"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^13.3.5",
    "@angular-eslint/eslint-plugin": "^13.2.1",
    "@angular-eslint/eslint-plugin-template": "^13.2.1",
    "@angular/cli": "13.3.5",
    "@angular/compiler-cli": "13.3.8",
    "@angular/language-service": "13.3.8",
    "@compodoc/compodoc": "^1.1.19",
    "@nrwl/cli": "^14.1.5",
    "@nrwl/cypress": "^14.1.5",
    "@nrwl/eslint-plugin-nx": "^14.1.5",
    "@nrwl/jest": "^14.1.5",
    "@nrwl/tao": "^14.1.5",
    "@nrwl/workspace": "^14.1.5",
    "@types/jest": "^27.5.1",
    "@types/mocha": "^9.1.1",
    "@types/node": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^5.23.0",
    "codelyzer": "^6.0.2",
    "cypress": "^9.6.1",
    "dotenv": "^16.0.1",
    "eslint": "^8.15.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.0.0",
    "filesystem": "^1.0.1",
    "firebase-admin": "^10.2.0",
    "firebase-functions": "^4.4.0",
    "firebase-tools": "^10.9.2",
    "firestore-export-import": "^1.1.0",
    "jest": "^28.1.0",
    "jest-preset-angular": "^12.0.1",
    "mocha": "^10.0.0",
    "prettier": "^2.6.2",
    "sass": "^1.51.0",
    "sonar-scanner": "^3.1.0",
    "ts-jest": "^28.0.2",
    "ts-node": "^10.7.0",
    "tslint": "^6.1.3",
    "typescript": "^4.6.4"
  },
  "description": "[![pipeline status](https://gitlab.com/satipasala/web-front-end/badges/develop/pipeline.svg)](https://gitlab.com/satipasala/web-front-end/commits/develop) [![coverage report](https://gitlab.com/satipasala/web-front-end/badges/develop/coverage.svg)](https://gitlab.com/satipasala/web-front-end/commits/develop)",
  "main": "jest.config.js",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@gitlab.com/satipasala/web-front-end.git"
  },
  "keywords": [],
  "author": "",
  "bugs": {
    "url": "https://gitlab.com/satipasala/web-front-end/issues"
  },
  "homepage": "https://gitlab.com/satipasala/web-front-end#readme",
  "xplat": {
    "prefix": "satipasala",
    "framework": "angular",
    "groupByName": true
  }
}
